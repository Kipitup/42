MATH(3)                  BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

Mdeuxienme               BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

Mtt_troisieme                BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MA_dlddf;fsfs                BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAsdffdfsdfsdf               BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

Meeeeeeeeeeee                BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAujujhuyyyyy                BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAjjjjjjjjjj                BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAkkkkkkkkk             BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAllllllll              BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAmmmmmmm             BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATnnnnnnn             BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAooooooo              BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAppppppppp                BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAqqqqqqq               BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATrrrrrrrrrr              BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATssssssssss           BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATttttttttt             BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MAuuuuuuuuu            BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATH(3)                  BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATH(3)                  BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATH(3)                  BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi

MATH(3)                  BSD Library Functions Manual                  MATH(3)NNAAMMEE     mmaatthh -- mathematical library functionsSSYYNNOOPPSSIISS     ##iinncclluuddee <<mmaatthh..hh>>DDEESSCCRRIIPPTTIIOONN     The header file math.h provides function prototypes and macros for work-     ing with floating point values.     Each math.h function is provided in three variants: single, double and     extended precision.  The single and double precision variants operate on     IEEE-754 single and double precision values, which correspond to the C     types _f_l_o_a_t and _d_o_u_b_l_e, respectively.     On Intel Macs, the C type _l_o_n_g _d_o_u_b_l_e corresponds to 80-bit IEEE-754 dou-     ble extended precision.  On iOS devices using ARM processors, _l_o_n_g _d_o_u_b_l_e     is mapped to _d_o_u_b_l_e, as there is no hardware-supported wider type.     Details of the floating point formats can be found via "man float".     Users who need to repeatedly perform the same calculation on a large set     of data will probably find that the vector math library (composed of     vMathLib and vForce) yields better performance for their needs than     sequential calls to the libm.     Users who need to perform mathematical operations on complex floating-     point numbers should consult the man pages for the complex portion of the     math library, via "man complex".LLIISSTT OOFF FFUUNNCCTTIIOONNSS     Each of the functions that use floating-point values are provided in sin-     gle, double, and extended precision; the double precision prototypes are     listed here.  The man pages for the individual functions provide more     details on their use, special cases, and prototypes for their single and     extended precision versions.     _i_n_t ffppccllaassssiiffyy(_d_o_u_b_l_e)     _i_n_t iissffiinniittee(_d_o_u_b_l_e)     The libm functions declared in math.h provide mathematical library func-     tions in single-, double-, and extended-precision IEEE-754 floating-point     formats on Intel macs, and in single- and double-precision IEEE-754     floating-point formats on PowerPC macs.SSEEEE AALLSSOO     float(3), complex(3)SSTTAANNDDAARRDDSS     The <math.h> functions conform to the ISO/IEC 9899:2011 standard.BSD                             August 16, 2012                            BSDi
